@model Business.Dto.NewsDto

@{
    ViewBag.Title = "Create";
}
<script src="~/ckeditor/ckeditor.js"></script>
<script src="~/ckeditor/adapters/jquery.js"></script>
<div class="container">
    <h3 class="text-primary">
        @(Model.Id == 0 ? "Add New News" : "Edit News")
    </h3>
    <script type="text/javascript">
        function fileCheck(obj) {
            var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];
            if ($.inArray($(obj).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
                alert("Only '.jpeg','.jpg', '.png', '.gif', '.bmp' formats are allowed.");
            }
        }
    </script>
    <hr />
    @using (Html.BeginForm("Save", "News", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)
        <div class="form-group">
            @Html.LabelFor(m => m.Title)
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Title, null, new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Body)
            @Html.TextAreaFor(model => model.Body, new { @class = "form-control", placeholder = "Body" })
            @Html.ValidationMessageFor(m => m.Body, null, new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Image, new { @class = "control-label " })
            <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
            @Html.ValidationMessageFor(model => model.Image)
        </div>
        @if (Model.Image != null && Model.Image.Length != 0)
        {
            <img src="data:image;base64,@System.Convert.ToBase64String(Model.Image)" style="width:250px;height:150px;padding-bottom: 10px;" />
        }
        <div class="form-group">
            @Html.LabelFor(m => m.CategoryName)
            @Html.DropDownListFor(m => m.CategoryId, new SelectList(Model.Categories, "Id", "Name"), "", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CategoryId, null, new { @class = "text-danger" })
        </div>
        <button type="submit" class="btn btn-primary">Save</button>
    }
</div>